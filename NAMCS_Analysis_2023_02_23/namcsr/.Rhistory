CKD = as_factor(CKD),
COPD = as_factor(COPD),
CHF = as_factor(CHF),
CAD = as_factor(CAD),
ESRD = as_factor(ESRD),
HYPLIPID = as_factor(HYPLIPID),
OBESITY = as_factor(OBESITY),
OSA = as_factor(OSA),
)
#d2016_table2 <- d2016_table1 %>% rename(`Age, years (mean (SD))` = AGE,
#                            Hypertension = HT,
#                            `Type 2 Diabetes` = DM2,
#                            `Race_Ethnicity` = RACERETH,
#                            Sex = SEX
#                            )
d2016_table2$DM2 <- d2016_table2$DM2 %>%
fct_recode(DM = "1", `No DM` = "0")
d2016_table2$CANCER <- d2016_table2$CANCER %>%
fct_recode(CANCER = "1", `No CANCER` = "0")
#d2016_table2$SEX <- d2016_table2$SEX %>%
#  fct_recode(Male = '2', Female = '1')
# All variables excluding the group variable
myVars <- d2016_table2 %>% select(c(-CANCER,-DIABTYP0 ,-DIABTYP2,-CSTRATM,-PATWT,-CPSUM)) %>% names()
# All categorical variables
catVars <- d2016_table2 %>% select(where(is.factor)) %>%
dplyr::select(-CANCER) %>% names()
svy_d2016 <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = d2016_table2$PATWT, data = d2016_table2)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d2016 ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
tab1_word <- print(tab1,
#                   nonnormal = c("Progesterone receptors, fmol/L (median [IQR])",
#                                 "Estrogen receptors, fmol/L (median [IQR])"),
quote = F,
noSpaces = T,
#  smd = T,
# missing = T,
test = T,
contDigits = 1,
printToggle = F,
dropEqual = T,
explain = F)
# Convert to dataframe
tab1_df <- as.data.frame(tab1_word) %>% rownames_to_column(var = "Variable")
# Rename first variable from n to No.
tab1_df$Variable[1] <- "No."
# Set Table header
header <- str_squish(str_remove("Table 2. Comorbidities among Cancer Patients in the 2016-2018 NAMCS Study", "\n"))
# Set Table footer
footer <- str_squish(str_remove("Numbers are No. (%) unless otherwise noted.
SD = standard deviation, IQR = interquartile range", "\n"))
# Set custom_tab() defaults
customtab_defaults()
# Create the flextable object
flextable_1 <- custom_tab(tab1_df, header, footer)
###FOR TABLE 2 i.e. comorbidities among DM patients
library(survival) # only needed for the dataset in this example
library(dplyr) # to modify the needed dataframe
library(tibble) # for rownames_to_column() function
library(stringr) # for str_squish()
library(flextable)
library(officer)
library(forcats)
library(survey)
library(tableone)
source("customtab.R")
variables <- c('CANCER','COLON','CRYO','EKG','PT',
'WOUND','ETOH','BREAST','DEPRESS','DVS','FOOT','NEURO','PELVIC','RECTAL','RETINAL','SKIN','SUBST',
'DIAEDUC','DIETNUTR','EXERCISE','INJPREV','TOBACED','WTREDUC','OTHSERV',
'CSTRATM','CPSUM','PATWT')
d2016_table1 <- comb201618_namcs %>% select(all_of(variables))
d2016_table2 <- d2016_table1 %>% mutate(
CANCER = as_factor(CANCER),
COLON = as_factor(COLON),
CRYO = as_factor(CRYO),
EKG = as_factor(EKG),
PT = as_factor(PT),
WOUND = as_factor(WOUND),
DIAEDUC = as_factor(DIAEDUC),
DIETNUTR = as_factor(DIETNUTR),
EXERCISE = as_factor(EXERCISE),
INJPREV = as_factor(INJPREV),
TOBACED = as_factor(TOBACED),
WTREDUC = as_factor(WTREDUC),
OTHSERV = as_factor(OTHSERV),
ETOH = as_factor(ETOH),
BREAST = as_factor(BREAST),
DEPRESS = as_factor(DEPRESS),
DVS = as_factor(DVS),
FOOT = as_factor(FOOT),
NEURO = as_factor(NEURO),
PELVIC = as_factor(PELVIC),
RECTAL = as_factor(RECTAL),
RETINAL = as_factor(RETINAL),
SKIN = as_factor(SKIN),
SUBST = as_factor(SUBST),
#  PAYTYPER = as_factor(PAYTYPER)
)
d2016_table2$CANCER <- d2016_table2$CANCER %>%
fct_recode(CANCER = "1", `No CANCER` = "0")
#d2016_table2$SEX <- d2016_table2$SEX %>%
#  fct_recode(Male = '2', Female = '1')
# All variables excluding the group variable
myVars <- d2016_table2 %>% select(c(-CANCER,-CSTRATM,-PATWT,-CPSUM)) %>% names()
# All categorical variables
catVars <- d2016_table2 %>% select(where(is.factor)) %>%
dplyr::select(-CANCER) %>% names()
svy_d2016 <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = d2016_table2$PATWT, data = d2016_table2)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d2016 ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
tab1_word <- print(tab1,
#                   nonnormal = c("Progesterone receptors, fmol/L (median [IQR])",
#                                 "Estrogen receptors, fmol/L (median [IQR])"),
quote = F,
noSpaces = T,
#  smd = T,
# missing = T,
test = T,
contDigits = 1,
printToggle = F,
dropEqual = T,
explain = F)
# Convert to dataframe
tab1_df <- as.data.frame(tab1_word) %>% rownames_to_column(var = "Variable")
# Rename first variable from n to No.
tab1_df$Variable[1] <- "No."
# Set Table header
header <- str_squish(str_remove("Table 2. Service provided By Cancer Status in the 2016-2018 NAMCS Study", "\n"))
# Set Table footer
footer <- str_squish(str_remove("Numbers are No. (%) unless otherwise noted.
SD = standard deviation, IQR = interquartile range", "\n"))
# Set custom_tab() defaults
customtab_defaults()
# Create the flextable object
flextable_1 <- custom_tab(tab1_df, header, footer)
myVars <- c("EKG", "DME", "COLON", "AUDIO", "CRYO", "SPIRO", "MENTAL", "PT", "PSYCHOTH", "WOUND",
"ETOH", "BREAST", "DEPRESS", "FOOT", 'NEURO', "PELVIC", "RECTAL", 'RETINAL', "SKIN", "SUBST",
"DIAEDUC", "DIETNUTR", "EXERCISE", "GRWTHDEV", "INJPREV", 'STRESMGT', 'SUBSTED', 'TOBACED',
"WTREDUC", 'OTHSERV')
# All categorical variables
catVars <- myVars
#Creating a dataset with Matching on Age for Cancer patients
#this will be useful for comparison esp. in Table 2. Final regression analysis does
#not need to use only matched dataset as it will adjust for "AGE"
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_table2, ratio = 2, method = "nearest")
library(survival) # only needed for the dataset in this example
library(dplyr) # to modify the needed dataframe
library(tibble) # for rownames_to_column() function
library(stringr) # for str_squish()
library(flextable)
library(officer)
library(forcats)
library(survey)
library(tableone)
source("customtab.R")
variables <- c('AGE','SEX','RACERETH', 'MAJOR', 'SPECCAT','PAYTYPER','CANCER',
'TOTCHRON','PASTVIS',
'CSTRATM','CPSUM', 'PATWT')
d201618_table1 <- comb201618_namcs %>% select(all_of(variables))
d201618_table2 <- d201618_table1 %>% mutate(SEX = as_factor(SEX),
RACERETH = as_factor(RACERETH),
MAJOR = as_factor(MAJOR),
CANCER = as_factor(CANCER),
PAYTYPER = as_factor(PAYTYPER),
SPECCAT = as_factor(SPECCAT))
#d2016_table2 <- d2016_table1 %>% rename(`Age, years (mean (SD))` = AGE,
#                            Hypertension = HT,
#                            `Type 2 Diabetes` = DM2,
#                            `Race_Ethnicity` = RACERETH,
#                            Sex = SEX
#                            )
d201618_table2$SEX <- d201618_table2$SEX %>%
fct_recode(Male = '2', Female = '1')
# All variables excluding the group variable
myVars <- d201618_table2 %>% select(c(-CANCER, -CSTRATM,-PATWT,-CPSUM)) %>% names()
# All categorical variables
catVars <- d201618_table2 %>% select(where(is.factor)) %>%
dplyr::select(-CANCER) %>% names()
svy_d201618 <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = d201618_table2$PATWT, data = d201618_table2)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d201618 ,
factorVars = catVars,
strata = "CANCER",
addOverall = T,
test = T,
includeNA = FALSE)
tab1_word <- print(tab1,
#                   nonnormal = c("Progesterone receptors, fmol/L (median [IQR])",
#                                 "Estrogen receptors, fmol/L (median [IQR])"),
quote = F,
noSpaces = T,
#  smd = T,
# missing = T,
test = T,
contDigits = 1,
printToggle = F,
dropEqual = T,
explain = F)
# Convert to dataframe
tab1_df <- as.data.frame(tab1_word) %>% rownames_to_column(var = "Variable")
# Rename first variable from n to No.
tab1_df$Variable[1] <- "No."
# Set Table header
header <- str_squish(str_remove("Table 1. Baseline characteristics By Cancer Status in the 2016, 18 NAMCS Study", "\n"))
# Set Table footer
footer <- str_squish(str_remove("Numbers are No. (%) unless otherwise noted.
SD = standard deviation, IQR = interquartile range", "\n"))
# Set custom_tab() defaults
customtab_defaults()
# Create the flextable object
flextable_1 <- custom_tab(tab1_df, header, footer)
myVars <- c("EKG", "DME", "COLON", "AUDIO", "CRYO", "SPIRO", "MENTAL", "PT", "PSYCHOTH", "WOUND",
"ETOH", "BREAST", "DEPRESS", "FOOT", 'NEURO', "PELVIC", "RECTAL", 'RETINAL', "SKIN", "SUBST",
"DIAEDUC", "DIETNUTR", "EXERCISE", "GRWTHDEV", "INJPREV", 'STRESMGT', 'SUBSTED', 'TOBACED',
"WTREDUC", 'OTHSERV')
# All categorical variables
catVars <- myVars
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_table2, ratio = 2, method = "nearest")
MatchedCAdata <- MatchIt::match.data(MatchedCA)
MatchedCAdata$weights  <- MatchedCAdata$subclass <- MatchedCAdata$distance <- NULL
svy_d201618_matched <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = MatchedCAdata$PATWT, data = MatchedCAdata)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d201618_matched ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
View(svy_d201618_matched)
View(MatchedCAdata)
svy_d201618_matched <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = MatchedCAdata$PATWT, data = MatchedCAdata)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d201618_matched ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d201618_matched ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
View(MatchedCA)
View(MatchedCAdata)
MatchedCAdata$weights  <- MatchedCAdata$subclass <- MatchedCAdata$distance <- NULL
svy_d201618_matched <- left_join(svy_d201618_matched, comb201618_namcs)
MatchedCA <- left_join(MatchedCA, comb201618_namcs)
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d2016_table2, ratio = 2, method = "nearest")
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=comb201618_namcs, ratio = 2, method = "nearest")
MatchedCAdata <- MatchIt::match.data(MatchedCA)
MatchedCAdata$weights  <- MatchedCAdata$subclass <- MatchedCAdata$distance <- NULL
svy_d201618_matched <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = MatchedCAdata$PATWT, data = MatchedCAdata)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d201618_matched ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
tab1_word <- print(tab1,
#                   nonnormal = c("Progesterone receptors, fmol/L (median [IQR])",
#                                 "Estrogen receptors, fmol/L (median [IQR])"),
quote = F,
noSpaces = T,
#  smd = T,
# missing = T,
test = T,
contDigits = 1,
printToggle = F,
dropEqual = T,
explain = F)
# Convert to dataframe
tab1_df <- as.data.frame(tab1_word) %>% rownames_to_column(var = "Variable")
# Rename first variable from n to No.
tab1_df$Variable[1] <- "No."
# Set Table header
header <- str_squish(str_remove("Table 3. Comparison of Services provided in Visits among CANCER Patients Vs. Age-Matched non-Cancer patients in the 2016-2018 NAMCS Study", "\n"))
# Set Table footer
footer <- str_squish(str_remove("Numbers are No. (%) unless otherwise noted.
SD = standard deviation, IQR = interquartile range", "\n"))
# Set custom_tab() defaults
customtab_defaults()
# Create the flextable object
flextable_1 <- custom_tab(tab1_df, header, footer)
View(tab1_df)
View(tab1_df)
forms <- list(x1 = EKG ~ CANCER + AGE,
x2 = DME ~ CANCER + AGE,
x3 = COLON ~ CANCER + AGE ,
x4 = AUDIO ~ CANCER + AGE,
x5 = CRYO ~ CANCER + AGE,
x6 = SPIRO ~ CANCER + AGE ,
x7 = MENTAL ~ CANCER + AGE,
x8 = PT ~ CANCER + AGE,
x9 = PSYCHOTH ~ CANCER + AGE ,
x10 = WOUND ~ CANCER + AGE,
x11 = ETOH ~ CANCER + AGE,
x12 = BREAST ~ CANCER + AGE ,
x13 = DEPRESS ~ CANCER + AGE,
x14 = FOOT ~ CANCER + AGE,
x15 = NEURO ~ CANCER + AGE ,
x16 = PELVIC ~ CANCER + AGE,
x17 = RECTAL ~ CANCER + AGE,
x18 = RETINAL ~ CANCER + AGE ,
x19 = SKIN ~ CANCER + AGE,
x20 = SUBST ~ CANCER + AGE,
x21 = DIAEDUC ~ CANCER + AGE ,
x22 = DIETNUTR ~ CANCER + AGE,
x23 = EXERCISE ~ CANCER + AGE,
x24 = GRWTHDEV ~ CANCER + AGE ,
x25 = INJPREV ~ CANCER + AGE,
x26 = STRESMGT ~ CANCER + AGE,
x27 = SUBSTED ~ CANCER + AGE ,
x28 = TOBACED ~ CANCER + AGE,
x29 = WTREDUC ~ CANCER + AGE,
x30 = OTHSERV ~ CANCER + AGE
)
library(purrr)
regresults <- map_df(forms, ~coef(glm(.x, data = MatchedCAdata, family = binomial(link=logit)))) %>%
select(-1, -3)
regresultsstderr <- map_df(forms, ~coef(summary(glm(.x, data = MatchedCAdata, family = binomial(link=logit))))[,2]) %>%
select(-1 ,-3)
regresultspvalue <- map_df(forms, ~coef(summary(glm(.x, data = MatchedCAdata,
family = binomial(link=logit))))[,'Pr(>|z|)']) %>%
select(-1, -3)
regresultscoeffs <- map_df(forms, ~coef(summary(glm(.x, data = MatchedCAdata, family = binomial(link=logit))))[,1]) %>%
select(-1 ,-3)
regresultsterm <- c("EKG","DME","COLON","AUDIO","CRYO","SPIRO","MENTAL","PT","PSYCHOTH","WOUND","ETOH","BREAST","DEPRESS","FOOT","NEURO","PELVIC","RECTAL","RETINAL","SKIN","SUBST","DIAEDUC","DIETNUTR","EXERCISE","GRWTHDEV","INJPREV","STRESMGT","SUBSTED","TOBACED","WTREDUC","OTHSERV")
regresultsdata <- cbind(regresultsterm, regresultscoeffs, regresultsstderr, regresultspvalue)
names(regresultsdata) <- c("Term", "Coeff", "StdErr", "P-value")
regresultsdata$OR <- exp(regresultsdata$Coeff)
regresultsdata$LOR <- exp(regresultsdata$Coeff - (2*regresultsdata$StdErr))
regresultsdata$UOR <- exp(regresultsdata$Coeff + (2*regresultsdata$StdErr))
regresultsdata <- regresultsdata[order(regresultsdata$OR),]
View(regresultsdata)
write.csv(regresultsdata,"C:\\Users\\Abhi\\Documents\\NAMCS2018\\RegressionResults\\CA_regresults.csv", row.names = FALSE, quote=FALSE)
View(MatchedCAdata)
MatchedCAdata <- MatchIt::match.data(MatchedCA)[,myVars]
MatchedCAdata$weights  <- MatchedCAdata$subclass <- MatchedCAdata$distance <- NULL
svy_d201618_matched <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = MatchedCAdata$PATWT, data = MatchedCAdata)
d201618_match = comb201618_namcs[,myVars]
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_match, ratio = 2, method = "nearest")
myVars <- c("EKG", "DME", "COLON", "AUDIO", "CRYO", "SPIRO", "MENTAL", "PT", "PSYCHOTH", "WOUND",
"ETOH", "BREAST", "DEPRESS", "FOOT", 'NEURO', "PELVIC", "RECTAL", 'RETINAL', "SKIN", "SUBST",
"DIAEDUC", "DIETNUTR", "EXERCISE", "GRWTHDEV", "INJPREV", 'STRESMGT', 'SUBSTED', 'TOBACED',
"WTREDUC", 'OTHSERV','CANCER')
# All categorical variables
catVars <- myVars
d201618_match = comb201618_namcs[,myVars]
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_match, ratio = 2, method = "nearest")
myVars <- c("EKG", "DME", "COLON", "AUDIO", "CRYO", "SPIRO", "MENTAL", "PT", "PSYCHOTH", "WOUND",
"ETOH", "BREAST", "DEPRESS", "FOOT", 'NEURO', "PELVIC", "RECTAL", 'RETINAL', "SKIN", "SUBST",
"DIAEDUC", "DIETNUTR", "EXERCISE", "GRWTHDEV", "INJPREV", 'STRESMGT', 'SUBSTED', 'TOBACED',
"WTREDUC", 'OTHSERV','CANCER','AGE')
# All categorical variables
catVars <- myVars
#Creating a dataset with Matching on Age for Cancer patients
#this will be useful for comparison esp. in Table 2. Final regression analysis does
#not need to use only matched dataset as it will adjust for "AGE"
d201618_match = comb201618_namcs[,myVars]
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_match, ratio = 2, method = "nearest")
myVars <- c("EKG", "DME", "COLON", "AUDIO", "CRYO", "SPIRO", "MENTAL", "PT", "PSYCHOTH", "WOUND",
"ETOH", "BREAST", "DEPRESS", "FOOT", 'NEURO', "PELVIC", "RECTAL", 'RETINAL', "SKIN", "SUBST",
"DIAEDUC", "DIETNUTR", "EXERCISE", "GRWTHDEV", "INJPREV", 'STRESMGT', 'SUBSTED', 'TOBACED',
"WTREDUC", 'OTHSERV','CANCER','AGE','PATWT')
# All categorical variables
catVars <- myVars
#Creating a dataset with Matching on Age for Cancer patients
#this will be useful for comparison esp. in Table 2. Final regression analysis does
#not need to use only matched dataset as it will adjust for "AGE"
d201618_match = comb201618_namcs[,myVars]
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_match, ratio = 2, method = "nearest")
myVars <- c("EKG", "DME", "COLON", "AUDIO", "CRYO", "SPIRO", "MENTAL", "PT", "PSYCHOTH", "WOUND",
"ETOH", "BREAST", "DEPRESS", "FOOT", 'NEURO', "PELVIC", "RECTAL", 'RETINAL', "SKIN", "SUBST",
"DIAEDUC", "DIETNUTR", "EXERCISE", "GRWTHDEV", "INJPREV", 'STRESMGT', 'SUBSTED', 'TOBACED',
"WTREDUC", 'OTHSERV','CANCER','AGE','PATWT','CSTRATM','CPSUM')
# All categorical variables
catVars <- myVars
d201618_match = comb201618_namcs[,myVars]
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_match, ratio = 2, method = "nearest")
MatchedCAdata <- MatchIt::match.data(MatchedCA)
MatchedCAdata$weights  <- MatchedCAdata$subclass <- MatchedCAdata$distance <- NULL
svy_d201618_matched <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = MatchedCAdata$PATWT, data = MatchedCAdata)
tab1 <- svyCreateTableOne(vars = myVars,data = svy_d201618_matched ,
factorVars = catVars,
strata = 'CANCER',
addOverall = T,
test = T,
includeNA = FALSE)
View(MatchedCAdata)
d201618_match$TotalServices <- d201618_match$EKG + d201618_match$DME + d201618_match$COLON + d201618_match$AUDIO +
d201618_match$CRYO + d201618_match$SPIRO + d201618_match$MENTAL + d201618_match$PT + d201618_match$PSYCHOTH +
d201618_match$WOUND + d201618_match$ETOH + d201618_match$BREAST + d201618_match$DEPRESS + d201618_match$FOOT +
d201618_match$NEURO + d201618_match$PELVIC + d201618_match$RECTAL + d201618_match$RETINAL + d201618_match$SKIN +
d201618_match$SUBST + d201618_match$DIAEDUC + d201618_match$DIETNUTR + d201618_match$EXERCISE +
d201618_match$GRWTHDEV + d201618_match$INJPREV + d201618_match$STRESMGT + d201618_match$SUBSTED +
d201618_match$TOBACED + d201618_match$WTREDUC + d201618_match$OTHSERV
table(d201618_match$TotalServices)
d201618_match$TotalServices_0_1 <- ifelse(d201618_match$TotalServices == 0, 0, 1)
table(d201618_match$TotalServices_0_1)
forms <- list(x1 = EKG ~ CANCER + AGE,
x2 = DME ~ CANCER + AGE,
x3 = COLON ~ CANCER + AGE ,
x4 = AUDIO ~ CANCER + AGE,
x5 = CRYO ~ CANCER + AGE,
x6 = SPIRO ~ CANCER + AGE ,
x7 = MENTAL ~ CANCER + AGE,
x8 = PT ~ CANCER + AGE,
x9 = PSYCHOTH ~ CANCER + AGE ,
x10 = WOUND ~ CANCER + AGE,
x11 = ETOH ~ CANCER + AGE,
x12 = BREAST ~ CANCER + AGE ,
x13 = DEPRESS ~ CANCER + AGE,
x14 = FOOT ~ CANCER + AGE,
x15 = NEURO ~ CANCER + AGE ,
x16 = PELVIC ~ CANCER + AGE,
x17 = RECTAL ~ CANCER + AGE,
x18 = RETINAL ~ CANCER + AGE ,
x19 = SKIN ~ CANCER + AGE,
x20 = SUBST ~ CANCER + AGE,
x21 = DIAEDUC ~ CANCER + AGE ,
x22 = DIETNUTR ~ CANCER + AGE,
x23 = EXERCISE ~ CANCER + AGE,
x24 = GRWTHDEV ~ CANCER + AGE ,
x25 = INJPREV ~ CANCER + AGE,
x26 = STRESMGT ~ CANCER + AGE,
x27 = SUBSTED ~ CANCER + AGE ,
x28 = TOBACED ~ CANCER + AGE,
x29 = WTREDUC ~ CANCER + AGE,
x30 = OTHSERV ~ CANCER + AGE,
x31 = TotalServices_0_1 ~ CANCER + AGE
)
d201618_match$TotalServices_0_1 <- ifelse(d201618_match$TotalServices == 0, 0, 1)
MatchedCA <- MatchIt::matchit(CANCER ~ AGE + PATWT, data=d201618_match, ratio = 2, method = "nearest")
MatchedCAdata <- MatchIt::match.data(MatchedCA)
MatchedCAdata$weights  <- MatchedCAdata$subclass <- MatchedCAdata$distance <- NULL
svy_d201618_matched <- svydesign(id=~CSTRATM+CPSUM, fpc =NULL, weights = MatchedCAdata$PATWT, data = MatchedCAdata)
library(purrr)
regresults <- map_df(forms, ~coef(glm(.x, data = MatchedCAdata, family = binomial(link=logit)))) %>%
select(-1, -3)
regresultsstderr <- map_df(forms, ~coef(summary(glm(.x, data = MatchedCAdata, family = binomial(link=logit))))[,2]) %>%
select(-1 ,-3)
regresultspvalue <- map_df(forms, ~coef(summary(glm(.x, data = MatchedCAdata,
family = binomial(link=logit))))[,'Pr(>|z|)']) %>%
select(-1, -3)
regresultscoeffs <- map_df(forms, ~coef(summary(glm(.x, data = MatchedCAdata, family = binomial(link=logit))))[,1]) %>%
select(-1 ,-3)
regresultsterm <- c("EKG","DME","COLON","AUDIO","CRYO","SPIRO","MENTAL","PT","PSYCHOTH","WOUND","ETOH","BREAST","DEPRESS","FOOT","NEURO","PELVIC","RECTAL","RETINAL","SKIN","SUBST","DIAEDUC","DIETNUTR","EXERCISE","GRWTHDEV","INJPREV","STRESMGT","SUBSTED","TOBACED","WTREDUC","OTHSERV","ANY SERVICE")
regresultsdata <- cbind(regresultsterm, regresultscoeffs, regresultsstderr, regresultspvalue)
names(regresultsdata) <- c("Term", "Coeff", "StdErr", "P-value")
regresultsdata$OR <- exp(regresultsdata$Coeff)
regresultsdata$LOR <- exp(regresultsdata$Coeff - (2*regresultsdata$StdErr))
regresultsdata$UOR <- exp(regresultsdata$Coeff + (2*regresultsdata$StdErr))
regresultsdata <- regresultsdata[order(regresultsdata$OR),]
View(regresultsdata)
write.csv(regresultsdata,"C:\\Users\\Abhi\\Documents\\NAMCS2018\\RegressionResults\\CA_regresults.csv", row.names = FALSE, quote=FALSE)
library(forestplot)
library(dplyr)
# Cochrane data from the 'rmeta'-package
cochrane_from_rmeta <- structure(list(mean  = c(NA, NA, 0.34, 0.35, 0.36, 0.38, 0.42, 0.44, 0.48, 0.53, 0.58, 0.70, 0.73, 0.73, 0.74, 0.78, 0.79, 0.82, 0.90, 0.90, 0.97, 1.06, 1.09, 1.18, 1.18, 1.21, 1.23, 1.27, 1.56, 1.91, 1.97, 2.02, 3.98, NA, NA, NA),
lower = c(NA, NA, 0.16, 0.16, 0.18, 0.20, 0.24, 0.24, 0.34, 0.24, 0.50, 0.29, 0.55, 0.49, 0.59, 0.50, 0.50, 0.37, 0.61, 0.47, 0.72, 0.90, 0.72, 1.06, 0.20, 1.06, 0.88, 0.85, 0.94, 1.41, 1.56, 1.79, 2.97, NA, NA, NA),
upper = c(NA, NA, 0.73, 0.75, 0.72, 0.72, 0.72, 0.81, 0.66, 1.19, 0.67, 1.70, 0.95, 1.09, 0.93, 1.20, 1.25, 1.81, 1.31, 1.73, 1.31, 1.25, 1.67, 1.31, 7.11, 1.38, 1.72, 1.90, 2.59, 2.60, 2.50, 2.27, 5.33, NA, NA, NA)),
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
tabletext <- cbind(c("","", "Service", "AUDIO", "MENTAL", "PSYCHOTH", "DIAEDUC", "PT", "DME", "EKG", "STRESMGT", "RETINAL", "SUBSTED", "EXERCISE", "WTREDUC", "DIETNUTR", "FOOT", "INJPREV", "SPIRO", "TOBACED", "COLON", "DEPRESS", "NEURO", "ETOH", "OTHSERV", "GRWTHDEV", "ANY SERVICE", "PELVIC", "RECTAL", "SUBST", "BREAST", "CRYO", "SKIN", "WOUND", NA, NA),
#                   c("No Cancer", "(Visits)", "3858056", "3710911", "12736395", "7428436", "8985155", "3542629", "8167755", "1526110", "3488680", "7465066", "69658105", "147818327", "407503", "13647561", "6481652", "6576035", "6830948", "43252688", "5751294", "17684689", "5167512", "8175458", "3669857", "52847644", "19207196", "13851872", "29294912", "40093047", "11354601", "1414629", NA, NA),
#                   c("Cancer", "(Visits)", "657575", "720645", "3208657", "1945442", "3159014", "1270977", "3751672", "628513", "1200816", "2899438", "38897833", "79113510", "560407", "7199974", "3793420", "4802872", "4643279", "26958287", "2730939", "14208761", "3619626", "5496785", "1961703", "42564184", "13697462", "13671545", "28634163", "39594661", "13428346", "25633563", NA, NA),
c("","", "OR", "0.34", "0.35", "0.36", "0.38", "0.42", "0.44", "0.48", "0.53", "0.58", "0.70", "0.73", "0.73", "0.74", "0.78", "0.79", "0.82", "0.90", "0.90", "0.97", "1.06", "1.09", "1.18", "1.18", "1.21", "1.23", "1.27", "1.56", "1.91", "1.97", "2.02", "3.98", NA, NA))
png(file="C:\\Users\\Abhi\\Documents\\NAMCS2018\\Forest_plot_CA.png",
width=1200, height=800)
cochrane_from_rmeta %>%
forestplot(labeltext = tabletext,
is.summary = c(rep(TRUE, 2), rep(FALSE, 30), TRUE),
clip = c(0.1, 2.5),
xlog = TRUE,
col = fpColors(box = "royalblue",
line = "darkblue",
summary = "royalblue"))
dev.off()
library(forestplot)
library(dplyr)
# Cochrane data from the 'rmeta'-package
cochrane_from_rmeta <- structure(list(mean  = c(NA, NA, 0.34, 0.35, 0.36, 0.38, 0.42, 0.44, 0.48, 0.53, 0.58, 0.70, 0.73, 0.73, 0.74, 0.78, 0.79, 0.82, 0.90, 0.90, 0.97, 1.06, 1.09, 1.18, 1.18, 1.23, 1.27, 1.56, 1.91, 1.97, 2.02, 3.98, 1.21, NA, NA, NA),
lower = c(NA, NA, 0.16, 0.16, 0.18, 0.20, 0.24, 0.24, 0.34, 0.24, 0.50, 0.29, 0.55, 0.49, 0.59, 0.50, 0.50, 0.37, 0.61, 0.47, 0.72, 0.90, 0.72, 1.06, 0.20, 0.88, 0.85, 0.94, 1.41, 1.56, 1.79, 2.97, 1.06, NA, NA, NA),
upper = c(NA, NA, 0.73, 0.75, 0.72, 0.72, 0.72, 0.81, 0.66, 1.19, 0.67, 1.70, 0.95, 1.09, 0.93, 1.20, 1.25, 1.81, 1.31, 1.73, 1.31, 1.25, 1.67, 1.31, 7.11, 1.72, 1.90, 2.59, 2.60, 2.50, 2.27, 5.33, 1.38, NA, NA, NA)),
.Names = c("mean", "lower", "upper"),
row.names = c(NA, -11L),
class = "data.frame")
tabletext <- cbind(c("","", "Service", "AUDIO", "MENTAL", "PSYCHOTH", "DIAEDUC", "PT", "DME", "EKG", "STRESMGT", "RETINAL", "SUBSTED", "EXERCISE", "WTREDUC", "DIETNUTR", "FOOT", "INJPREV", "SPIRO", "TOBACED", "COLON", "DEPRESS", "NEURO", "ETOH", "OTHSERV", "GRWTHDEV", "PELVIC", "RECTAL", "SUBST", "BREAST", "CRYO", "SKIN", "WOUND", "ANY SERVICE", NA, NA),
#                   c("No Cancer", "(Visits)", "3858056", "3710911", "12736395", "7428436", "8985155", "3542629", "8167755", "1526110", "3488680", "7465066", "69658105", "147818327", "407503", "13647561", "6481652", "6576035", "6830948", "43252688", "5751294", "17684689", "5167512", "8175458", "3669857", "52847644", "19207196", "13851872", "29294912", "40093047", "11354601", "1414629", NA, NA),
#                   c("Cancer", "(Visits)", "657575", "720645", "3208657", "1945442", "3159014", "1270977", "3751672", "628513", "1200816", "2899438", "38897833", "79113510", "560407", "7199974", "3793420", "4802872", "4643279", "26958287", "2730939", "14208761", "3619626", "5496785", "1961703", "42564184", "13697462", "13671545", "28634163", "39594661", "13428346", "25633563", NA, NA),
c("","", "OR", "0.34", "0.35", "0.36", "0.38", "0.42", "0.44", "0.48", "0.53", "0.58", "0.70", "0.73", "0.73", "0.74", "0.78", "0.79", "0.82", "0.90", "0.90", "0.97", "1.06", "1.09", "1.18", "1.18", "1.23", "1.27", "1.56", "1.91", "1.97", "2.02", "3.98", "1.21", NA, NA))
png(file="C:\\Users\\Abhi\\Documents\\NAMCS2018\\Forest_plot_CA.png",
width=1200, height=800)
cochrane_from_rmeta %>%
forestplot(labeltext = tabletext,
is.summary = c(rep(TRUE, 2), rep(FALSE, 30), TRUE),
clip = c(0.1, 2.5),
xlog = TRUE,
col = fpColors(box = "royalblue",
line = "darkblue",
summary = "royalblue"))
dev.off()
2.875 * 2.54
namcs2018_sas_1 <- subset(namcs2018_sas, select = c(-CATPROC1, -CATPROC2, -CATPROC3, -CATPROC4, -CATPROC5, -CATPROC6, -CATPROC7, -CATPROC8, -CATPROC9))
source("~/NAMCS.R")
